head(surfaceTaxa, 5)
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub(^''$, '-', surfaceTaxa[, i])
}
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('^$', '-', surfaceTaxa[, i])
}
kable(data.frame(head(surfaceTaxa, 5)))
head(surfaceTaxa, 5)
nchar(surfaceTaxa[1, 6])
surfaceTaxa[1, 6]
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('NA', '-', surfaceTaxa[, i])
}
head(surfaceTaxa, 5)
which(is.na(surfaceTaxa[, i])
which(is.na(surfaceTaxa[, i]))
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[which(is.na(surfaceTaxa[, i])), i] <- '-'
}
kable(data.frame(head(surfaceTaxa, 5)))
head(surfaceTaxa, 5)
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[NA, i] <- '-'
}
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa['NA', i] <- '-'
}
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
is.na(surfaceTaxa[, i])
which(is.na(surfaceTaxa[, i]))
suraceTaxa[which(is.na(surfaceTaxa[, i])), i]
surfaceTaxa[which(is.na(surfaceTaxa[, i])), i]
surfaceTaxa[which(is.na(surfaceTaxa[, i])), ]
surfaceTaxa[is.na(surfaceTaxa[, i]), i]
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
fixNA <- function(x) {if(is.na(x)) x <- '-'}
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- apply(surfaceTaxa[, i], 1, fixNA)
}
surfaceTaxa[is.na(surfaceTaxa)] <- '-'
head(surfaceTaxa, 5)
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
surfaceTaxa[is.na(surfaceTaxa)] <- '-'
head(surfaceTaxa, 5))
head(surfaceTaxa, 5)
surfaceTaxa[is.na(surfaceTaxa[, i]), i]
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[is.na(surfaceTaxa[, i]), i] <- '-'
}
kable(data.frame(head(surfaceTaxa, 5)))
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i][is.na(surfaceTaxa[, i])] <- '-'
}
surfaceTaxa$Genus[is.na(surfaceTaxa$Genus)] <- '-'
is.na(surfaceTaxa$Genus)
surfaceTaxa$Genus
str(surfaceTaxa)
surfaceTaxa[is.na(as.character(surfaceTaxa))] <- '-'
head(surfaceTaxa, 5)
surfaceTaxa[, i] <- as.character(surfaceTaxa[, i]
)
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- as.character(surfaceTaxa[, i])
surfaceTaxa[, i][is.na(surfaceTaxa[, i])] <- '-'
}
kable(data.frame(head(surfaceTaxa, 5)))
kable(data.frame(head(surfaceTaxa)[, c(2, 5:7)))
kable(data.frame(head(surfaceTaxa)[, c(2, 5:7))])
kable(data.frame(head(surfaceTaxa)[, c(2, 5:7)]))
topTaxa <- taxa[names(sort(colSums(tab), descending=TRUE)[1:5]), c(2, 5:7)]
topTaxa <- taxa[names(sort(colSums(tab), decreasing=TRUE)[1:5]), c(2, 5:7)]
topTaxa
tops <- names(sort(colSums(tab), decreasing=TRUE)[1:5])
topTaxa <- taxa[tops, c(2, 5:7)]
topTaxa$RelAbu <- colSums(tab)[tops]/100
kable(data.frame(head(surfaceTaxa)[, c(2, 5:7)]))
kable(topTaxa)
install.packages('knitr')
install.packages('knitr')
install.packages("knitr")
library(knitr)
kable(topTaxa)
source('~/.active-rstudio-document', echo=TRUE)
str(surfaceTypeModel)
print(xtable(surfaceTypeModel)) # the better way for latex tables
xtable(surfaceTypeModel, digits=c(0, 0, 2, 2, 2, 2, 3),
caption='Surface type explains a significant amount of variation among communities.')
str(surfaceTypeModel
)
source('~/.active-rstudio-document', echo=TRUE)
str(surfaceTypeModel)
xtable(surfaceTypeModel, digits=c(0, 0, 2, 2, 2, 2, 3),
caption='Surface type explains a significant amount of variation among communities.')
source('~/.active-rstudio-document', echo=TRUE)
mostAbu
taxa[mostAbu, ]
mostAbu[1]
head(c(1:10))
tail(c(1:10))
setwd('~/Dropbox/SLP_Teaching/reportRmd')
library(qiimer)
library(vegan)
library(labdsv)
library(xtable)
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
library(biom)
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(otuTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
library(knitr)
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(otuTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
surfaceTaxa <- data.frame(tax_table(surfaceTablePhyloseq))
for (i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- as.character(surfaceTaxa[, i])
surfaceTaxa[, i][is.na(surfaceTaxa[, i])] <- '-'
}
kable(data.frame(head(surfaceTaxa)[, c(2, 5:7)]))
otuTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
otuTaxa <- suppressWarnings(data.frame(do.call('rbind', otuTaxa.list)))
names(otuTaxa) <- c('k', 'p', 'c', 'o', 'f', 'g', 's')
surfaceTaxa <- otuTaxa[colnames(otuTable), ]
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
sort(row.names(surfaceMap))
kable(head(surfaceMap[, c(1,2,3)]))
head(surfaceMap[, c(1,2,3)])
read_qiime_mapping_file
?read_qiime_mapping_file
map
surfaceMap
read_qiime_mapping_file
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(otuTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
sort(row.names(surfaceMap))
row.names(surfaceMap)
read_qiime_mapping_file
map <- read_qiime_mapping_file('../QIIME/map.txt')
head(map)
map$SampleID
row.names(map) <- map$SampleID
row.names(map) <- map$SampleID
map$SampleID
row.names(map)
row.names(otuTable)
surfaceMap <- map[row.names(surfaceTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(surfaceTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
otuTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
otuTaxa <- suppressWarnings(data.frame(do.call('rbind', otuTaxa.list)))
names(otuTaxa) <- c('k', 'p', 'c', 'o', 'f', 'g', 's')
surfaceTaxa <- otuTaxa[colnames(otuTable), ]
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
dim(surfaceTaxa)
surfaceTaxa <- surfaceTaxa[-c(grep('mitochondria',
surfaceTaxa$Family)), ]
surfaceTaxa <- surfaceTaxa[-c(grep('Chloroplast',
surfaceTaxa$Class)), ]
surfaceTable <- surfaceTable[, row.names(surfaceTaxa)]
identical(row.names(surfaceTaxa), colnames(surfaceTable))
dim(surfaceTaxa)
row.names(surfaceTaxa)
surfaceTaxa
otuTaxa
rm(list=ls())
library(biom)
library(qiimer)
library(vegan)
library(labdsv)
library(xtable)
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(surfaceTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
otuTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
otuTaxa.list
otuTaxa <- suppressWarnings(data.frame(do.call('rbind', otuTaxa.list)))
otuTaxa
names(otuTaxa) <- c('k', 'p', 'c', 'o', 'f', 'g', 's')
names(otuTaxa)
colnames(otuTable)
surfaceTaxa <- otuTaxa[colnames(otuTable), ]
surfaceTaxa
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
dim(surfaceTaxa)
surfaceTaxa <- surfaceTaxa[-c(grep('mitochondria',
surfaceTaxa$Family)), ]
surfaceTaxa <- surfaceTaxa[-c(grep('Chloroplast',
surfaceTaxa$Class)), ]
surfaceTable <- surfaceTable[, row.names(surfaceTaxa)]
identical(row.names(surfaceTaxa), colnames(surfaceTable))
surfaceTable
row.names(surfaceTaxa)
surfaceTaxa
rm(list=ls())
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
map <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(map) <- map$SampleID
surfaceMap <- map[row.names(surfaceTable), ]
kable(head(surfaceMap[, c(1,2,3)]))
otuTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
otuTaxa <- suppressWarnings(data.frame(do.call('rbind', otuTaxa.list)))
names(otuTaxa) <- c('k', 'p', 'c', 'o', 'f', 'g', 's')
surfaceTaxa <- otuTaxa[colnames(otuTable), ]
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
dim(surfaceTaxa)
grep('mitochondria',
surfaceTaxa$Family)
names(otuTaxa) <- c('Kingdom', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
surfaceTaxa <- otuTaxa[colnames(otuTable), ]
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
grep('mitochondria',
surfaceTaxa$Family)
grep('Chloroplast',
surfaceTaxa$Class)
surfaceTaxa <- surfaceTaxa[-c(grep('mitochondria',
surfaceTaxa$Family)), ]
surfaceTaxa <- surfaceTaxa[-c(grep('Chloroplast',
surfaceTaxa$Class)), ]
row.names(surfaceTaxa)
surfaceTable
surfaceTable <- surfaceTable[, row.names(surfaceTaxa)]
identical(row.names(surfaceTaxa), colnames(surfaceTable))
dim(surfaceTaxa)
c(head(sort(rowSums(surfaceTable))), tail(sort(rowSums(surfaceTable))))
surfaceTable <- surfaceTable[which(rowSums(surfaceTable) > 100), ]
tab <- rrarefy(surfaceTable, 100)
map <- surfaceMap[row.names(tab), ]
map$color <- 'wheat'
map$color[map$SurfaceType == 'floor'] <- 'chocolate3'
map$color[map$SurfaceType == 'chair'] <- 'darkslateblue'
map$color[map$SurfaceType == 'desk'] <- 'goldenrod3'
map$SurfaceType <- factor(map$SurfaceType,
levels=c("wall", "floor",
"chair", "desk"))
map
map$sortID <- as.character(map$SampleID)
for(i in 1:nrow(map)) {
if(nchar(map$sortID[i]) == 10) {
map$sortID[i] <- gsub('162.', '162.0', map$sortID[i])
}
}
map <- map[order(map$sortID),
c('sortID', 'SurfaceType', 'xcoord', 'ycoord', 'color')]
map
tab <- tab[row.names(map), which(colSums(tab) > 0)]
taxa <- surfaceTaxa[colnames(tab), ]
dim(taxa)
kable(data.frame(head(taxa)[, c(2, 5:7)]))
distCanberra <- vegdist(tab, 'canberra')
nmdsCanberra <- bestnmds(distCanberra)
par(mar=c(5,4,1,5), las=1, xpd=TRUE)
plot(nmdsCanberra, pch=21, cex=2, bg=map$color)
legend(par()$usr[2], par()$usr[4], pch=21, pt.cex=1.5,
legend=levels(map$SurfaceType),
pt.bg=unique(map$color), bty='n')
surfaceTypeModel <- adonis(distCanberra ~ map$SurfaceType)$aov.tab
kable(surfaceTypeModel)
distSpatial <- dist(data.frame(map$xcoor, map$ycoor))
mantel(distCanberra, distSpatial)
chair <- which(map$SurfaceType == 'chair')
wall <- which(map$SurfaceType == 'wall')
desk <- which(map$SurfaceType == 'desk')
floor <- which(map$SurfaceType == 'floor')
testMantel <- function(these) {
mantel(vegdist(tab[these, ], 'canberra'),
dist(data.frame(map$xcoor, map$ycoor)[these, ]))
}
testMantel(chair)$signif
testMantel(wall)$signif
testMantel(desk)$signif
testMantel(floor)$signif
mostAbu <- names(sort(colSums(tab), TRUE)[1])
tops <- names(sort(colSums(tab), decreasing=TRUE)[1:5])
topTaxa <- taxa[tops, c(2, 5:7)]
topTaxa$RelAbu <- colSums(tab)[tops]/sum(tab)*100
kable(topTaxa)  # quick way to make markdown tables that will convert to LaTeX
system('ls')
system('ls ../')
system('ls ../QIIME/')
system('less ../QIIME/otu_table.biom')
set.seed(42)
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
otuTable[1:5, 1:5]
dim(otuTable)
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
identical(sort(row.names(surfaceMap)), sort(row.names(surfaceTable)))
identical(row.names(surfaceMap), row.names(surfaceTable))
rm(list=ls())
library(knitr)
set.seed(42)
# setwd('~/Dropbox/SLP_Teaching/reportRmd')
library(biom)
library(qiimer)
library(vegan)
library(labdsv)
library(xtable)
rawBiom <- read_biom('../QIIME/otu_table.biom')
otuTable.biom <- biom_raw_data(rawBiom)
otuTable <- t(matrify(otuTable.biom))  # make long form
surfaceTable <- otuTable[!(row.names(otuTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
surfaceMap <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(surfaceMap) <- surfaceMap$SampleID
kable(head(surfaceMap[, c(1,2,3)]))
surfaceMap$sortID <- as.character(surfaceMap$SampleID)
for(i in 1:nrow(surfaceMap)) {
if(nchar(surfaceMap$sortID[i]) == 10) {
surfaceMap$sortID[i] <- gsub('162.', '162.0', surfaceMap$sortID[i])
}
}
surfaceMap <- surfaceMap[order(map$sortID), ]
surfaceMap <- surfaceMap[order(surfaceMap$sortID), ]
surfaceMap
otuTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
otuTaxa <- suppressWarnings(data.frame(do.call('rbind', otuTaxa.list)))
names(otuTaxa) <- c('Kingdom', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
surfaceTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
surfaceTaxa <- suppressWarnings(data.frame(do.call('rbind', surfaceTaxa.list)))
names(surfaceTaxa) <- c('Kingdom', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
dim(surfaceTaxa)
surfaceTaxa <- surfaceTaxa[-c(grep('mitochondria',
surfaceTaxa$Family)), ]
surfaceTaxa <- surfaceTaxa[-c(grep('Chloroplast',
surfaceTaxa$Class)), ]
dim(surfaceTaxa)
surfaceTable <- surfaceTable[, row.names(surfaceTaxa)]
surfaceTable <- surfaceTable[row.names(surfaceMap), ]
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(row.names(surfaceMap), row.names(surfaceTable))
c(head(sort(rowSums(surfaceTable))), tail(sort(rowSums(surfaceTable))))
surfaceTable <- surfaceTable[which(rowSums(surfaceTable) > 100), ]
tab <- rrarefy(surfaceTable, 100)
map <- surfaceMap[row.names(tab), ]
map
map$color <- 'wheat'
map$color[map$SurfaceType == 'floor'] <- 'chocolate3'
map$color[map$SurfaceType == 'chair'] <- 'darkslateblue'
map$color[map$SurfaceType == 'desk'] <- 'goldenrod3'
map$SurfaceType <- factor(map$SurfaceType,
levels=c("wall", "floor",
"chair", "desk"))
tab <- tab[row.names(map), which(colSums(tab) > 0)]
taxa <- surfaceTaxa[colnames(tab), ]
dim(taxa)
distCanberra <- vegdist(tab, 'canberra')
nmdsCanberra <- bestnmds(distCanberra)
par(mar=c(5,4,1,5), las=1, xpd=TRUE)
plot(nmdsCanberra, pch=21, cex=2, bg=map$color)
legend(par()$usr[2], par()$usr[4], pch=21, pt.cex=1.5,
legend=levels(map$SurfaceType),
pt.bg=unique(map$color), bty='n')
surfaceTypeModel <- adonis(distCanberra ~ map$SurfaceType)$aov.tab
kable(surfaceTypeModel)
distSpatial <- dist(data.frame(map$xcoor, map$ycoor))
mantel(distCanberra, distSpatial)
distSpatial <- dist(data.frame(map$xcoor, map$ycoor))
mantel(distCanberra, distSpatial)
chair <- which(map$SurfaceType == 'chair')
wall <- which(map$SurfaceType == 'wall')
desk <- which(map$SurfaceType == 'desk')
floor <- which(map$SurfaceType == 'floor')
testMantel <- function(these) {
mantel(vegdist(tab[these, ], 'canberra'),
dist(data.frame(map$xcoor, map$ycoor)[these, ]))
}
testMantel(chair)$signif
testMantel(wall)$signif
testMantel(desk)$signif
testMantel(floor)$signif
mostAbu <- names(sort(colSums(tab), TRUE)[1])
tops <- names(sort(colSums(tab), decreasing=TRUE)[1:5])
topTaxa <- taxa[tops, c(2, 5:7)]
topTaxa$RelAbu <- colSums(tab)[tops]/sum(tab)*100
kable(topTaxa)  # quick way to make markdown tables that will convert to LaTeX
rm(list=ls())
rawBiom <- read_biom('../QIIME/otu_table.biom')
surfaceTable.biom <- biom_raw_data(rawBiom)
surfaceTable <- t(matrify(surfaceTable.biom))  # make long form
surfaceTable <- surfaceTable[!(row.names(surfaceTable) =='Swab.162.61'), ]
kable(surfaceTable[1:5, 1:5])
surfaceMap <- read_qiime_mapping_file('../QIIME/map.txt')
row.names(surfaceMap) <- surfaceMap$SampleID
kable(head(surfaceMap[, c(1,2,3)]))
surfaceMap$sortID <- as.character(surfaceMap$SampleID)
for(i in 1:nrow(surfaceMap)) {
if(nchar(surfaceMap$sortID[i]) == 10) {
surfaceMap$sortID[i] <- gsub('162.', '162.0', surfaceMap$sortID[i])
}
}
surfaceMap <- surfaceMap[order(surfaceMap$sortID), ]
surfaceTaxa.list <- biom_taxonomy(rawBiom, attr='taxonomy')
surfaceTaxa <- suppressWarnings(data.frame(do.call('rbind', surfaceTaxa.list)))
names(surfaceTaxa) <- c('Kingdom', 'Phylum', 'Class', 'Order', 'Family', 'Genus', 'Species')
for(i in 1:ncol(surfaceTaxa)) {
surfaceTaxa[, i] <- gsub('[[:alpha:]]{1}\\_\\_$', '--', surfaceTaxa[, i])
surfaceTaxa[, i] <- gsub('^[[:alpha:]]{1}\\_\\_', '', surfaceTaxa[, i])
}
kable(head(surfaceTaxa))
dim(surfaceTaxa)
surfaceTaxa <- surfaceTaxa[-c(grep('mitochondria',
surfaceTaxa$Family)), ]
surfaceTaxa <- surfaceTaxa[-c(grep('Chloroplast',
surfaceTaxa$Class)), ]
dim(surfaceTaxa)
surfaceTable <- surfaceTable[, row.names(surfaceTaxa)]
surfaceTable <- surfaceTable[row.names(surfaceMap), ]
identical(row.names(surfaceTaxa), colnames(surfaceTable))
identical(row.names(surfaceMap), row.names(surfaceTable))
c(head(sort(rowSums(surfaceTable))), tail(sort(rowSums(surfaceTable))))
rrare <- 100
surfaceTable <- surfaceTable[which(rowSums(surfaceTable) > rrare), ]
tab <- rrarefy(surfaceTable, rrare)
tab <- tab[, which(colSums(tab) > 0)]
taxa <- surfaceTaxa[colnames(tab), ]
dim(taxa)
map <- surfaceMap[row.names(tab), ]
kable(data.frame(head(taxa)[, c(2, 5:7)]))
map$color <- 'wheat'
map$color[map$SurfaceType == 'floor'] <- 'chocolate3'
map$color[map$SurfaceType == 'chair'] <- 'darkslateblue'
map$color[map$SurfaceType == 'desk'] <- 'goldenrod3'
map$SurfaceType <- factor(map$SurfaceType,
levels=c("wall", "floor",
"chair", "desk"))
nmdsCanberra <- nmds(distCanberra)
kable(head(surfaceTaxa)[, c(2, 5, 6, 7)])
install.packages(c('vegan', 'ggplot2', 'gplots', 'gtools', 'reshape', 'optparse', 'pheatmap', 'RColorBrewer', 'compute.es'))
install.packages(c("vegan", "ggplot2", "gplots", "gtools", "reshape",
'optparse', 'pheatmap', 'RColorBrewer', 'compute.es'))
